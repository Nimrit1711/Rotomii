<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rotomii - <%= team.team_name %></title>
    <link rel="stylesheet" href="/css/themeSwitch.css">
    <link rel="stylesheet" href="/css/team.css">
    <link href="https://fonts.googleapis.com/css2?family=Fredoka:wght@300..700&display=swap" rel="stylesheet">
    <style>
        .team-detail-container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 2rem;
        }
        
        .team-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
        }
        
        .team-actions {
            display: flex;
            gap: 1rem;
        }
        
        .btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 8px;
            font-size: 0.9rem;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        
        .btn-edit {
            background-color: #2196F3;
            color: white;
        }
        
        .btn-edit:hover {
            background-color: #1976D2;
        }
        
        .btn-delete {
            background-color: #f44336;
            color: white;
        }
        
        .btn-delete:hover {
            background-color: #d32f2f;
        }
        
        .btn-back {
            background-color: #666;
            color: white;
        }
        
        .btn-back:hover {
            background-color: #555;
        }
        
        .team-notes {
            background: var(--card-bg, #f5f5f5);
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 2rem;
        }
        
        .pokemon-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }
        
        .pokemon-card {
            background: var(--card-bg, #fff);
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            position: relative;
        }
        
        .pokemon-card.empty {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            min-height: 200px;
            border: 2px dashed var(--border-color, #ddd);
            cursor: pointer;
        }
        
        .pokemon-card.empty:hover {
            border-color: var(--primary-color, #4CAF50);
            background: var(--hover-bg, #f9f9f9);
        }
        
        .pokemon-position {
            position: absolute;
            top: 10px;
            left: 10px;
            background: var(--primary-color, #4CAF50);
            color: white;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }
        
        .pokemon-content {
            display: flex;
            gap: 1rem;
            align-items: center;
        }
        
        .pokemon-sprite {
            width: 120px;
            height: 120px;
            object-fit: contain;
        }
        
        .pokemon-info {
            flex: 1;
        }
        
        .pokemon-nickname {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
        }
        
        .pokemon-id {
            color: var(--text-secondary, #666);
            font-size: 0.9rem;
            margin-bottom: 0.5rem;
        }
        
        .pokemon-notes {
            font-size: 0.9rem;
            color: var(--text-secondary, #666);
            margin-top: 0.5rem;
        }
        
        .pokemon-actions {
            margin-top: 1rem;
            display: flex;
            gap: 0.5rem;
        }
        
        .btn-small {
            padding: 0.3rem 0.8rem;
            font-size: 0.8rem;
        }
        
        .btn-remove {
            background-color: #f44336;
            color: white;
        }
        
        .btn-remove:hover {
            background-color: #d32f2f;
        }
        
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
        }
        
        .modal-content {
            background-color: var(--card-bg, #fff);
            margin: 10% auto;
            padding: 2rem;
            border-radius: 12px;
            width: 90%;
            max-width: 600px;
        }
        
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }
        
        .close:hover {
            color: #000;
        }
    </style>
</head>
<body>
    <header>
        <%- include('partials/navbar') %>
    </header>

    <main>
        <div class="team-detail-container">
            <div class="team-header">
                <h1><%= team.team_name %></h1>
                <div class="team-actions">
                    <button class="btn btn-back" onclick="window.location.href='/teams'">
                        Back to Teams
                    </button>
                    <button class="btn btn-edit" onclick="openEditModal()">
                        Edit Team
                    </button>
                    <button class="btn btn-delete" onclick="deleteTeam()">
                        Delete Team
                    </button>
                </div>
            </div>
            
            <% if (team.notes) { %>
                <div class="team-notes">
                    <h3>Notes:</h3>
                    <p><%= team.notes %></p>
                </div>
            <% } %>
            
            <h2>Team Pokemon</h2>
            <div class="pokemon-grid">
                <% for (let i = 0; i < 6; i++) { %>
                    <% const pokemon = team.pokemon[i]; %>
                    <% if (pokemon) { %>
                        <div class="pokemon-card">
                            <div class="pokemon-position"><%= pokemon.position %></div>
                            <div class="pokemon-content">
                                <img src="<%= pokemon.spriteUrl %>" alt="<%= pokemon.nickname || pokemon.id %>" class="pokemon-sprite">
                                <div class="pokemon-info">
                                    <div class="pokemon-nickname"><%= pokemon.nickname || `Pokemon #${pokemon.id}` %></div>
                                    <div class="pokemon-id">ID: <%= pokemon.id %></div>
                                    <% if (pokemon.notes) { %>
                                        <div class="pokemon-notes"><%= pokemon.notes %></div>
                                    <% } %>
                                    <div class="pokemon-actions">
                                        <button class="btn btn-small btn-edit" onclick="editPokemon(<%= i + 1 %>)">
                                            Edit
                                        </button>
                                        <button class="btn btn-small btn-remove" onclick="removePokemon(<%= i + 1 %>)">
                                            Remove
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% } else { %>
                        <div class="pokemon-card empty" onclick="addPokemon(<%= i + 1 %>)">
                            <div class="pokemon-position"><%= i + 1 %></div>
                            <p>+ Add Pokemon</p>
                        </div>
                    <% } %>
                <% } %>
            </div>
        </div>
    </main>

    <!-- Edit Team Modal -->
    <div id="editTeamModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditModal()">&times;</span>
            <h2>Edit Team</h2>
            <form id="editTeamForm">
                <div class="form-group">
                    <label for="editTeamName">Team Name</label>
                    <input type="text" id="editTeamName" value="<%= team.team_name %>" required>
                </div>
                <div class="form-group">
                    <label for="editTeamNotes">Notes</label>
                    <textarea id="editTeamNotes" rows="4"><%= team.notes || '' %></textarea>
                </div>
                <div class="form-buttons">
                    <button type="button" class="btn btn-secondary" onclick="closeEditModal()">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>

    <%- include('partials/footer') %>

    <script>
        const teamId = <%= team.team_id %>;
        
        function openEditModal() {
            document.getElementById('editTeamModal').style.display = 'block';
        }
        
        function closeEditModal() {
            document.getElementById('editTeamModal').style.display = 'none';
        }
        
        document.getElementById('editTeamForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const teamName = document.getElementById('editTeamName').value.trim();
            const notes = document.getElementById('editTeamNotes').value.trim();
            
            try {
                const response = await fetch(`/api/teams/${teamId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        team_name: teamName,
                        notes: notes
                    })
                });
                
                if (response.ok) {
                    location.reload();
                } else {
                    const data = await response.json();
                    alert(data.error || 'Failed to update team');
                }
            } catch (err) {
                console.error('Error updating team:', err);
                alert('An error occurred. Please try again.');
            }
        });
        
        async function deleteTeam() {
            if (!confirm('Are you sure you want to delete this team? This action cannot be undone.')) {
                return;
            }
            
            try {
                const response = await fetch(`/api/teams/${teamId}`, {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    window.location.href = '/teams';
                } else {
                    const data = await response.json();
                    alert(data.error || 'Failed to delete team');
                }
            } catch (err) {
                console.error('Error deleting team:', err);
                alert('An error occurred. Please try again.');
            }
        }
        
        async function removePokemon(position) {
            if (!confirm('Are you sure you want to remove this Pokemon from the team?')) {
                return;
            }
            
            try {
                const response = await fetch(`/api/teams/${teamId}/pokemon/${position}`, {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    location.reload();
                } else {
                    const data = await response.json();
                    alert(data.error || 'Failed to remove Pokemon');
                }
            } catch (err) {
                console.error('Error removing Pokemon:', err);
                alert('An error occurred. Please try again.');
            }
        }
        
        function addPokemon(position) {
            // This would open a Pokemon selection modal
            // For now, we'll just show an alert
            alert(`Add Pokemon functionality for position ${position} to be implemented with Pokemon selection modal`);
        }
        
        function editPokemon(position) {
            // This would open a Pokemon edit modal
            // For now, we'll just show an alert
            alert(`Edit Pokemon functionality for position ${position} to be implemented`);
        }
        
        // Close modal when clicking outside of it
        window.onclick = function(event) {
            const modal = document.getElementById('editTeamModal');
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        }
    </script>
</body>
</html>
